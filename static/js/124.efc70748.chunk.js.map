{"version":3,"file":"static/js/124.efc70748.chunk.js","mappings":"0RASMA,EAAM,mCAqGZ,MAnGA,WACI,IAAIC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAEb,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAeC,EAAf,KANkB,wCAwClB,WAA2BH,GAA3B,gGAE+BI,MAAM,qDAAD,OAAsDZ,EAAtD,kBAAmEQ,IAFvG,WAEcK,EAFd,QAGsBC,GAHtB,sBAIkB,IAAIC,MAAMF,EAASG,QAJrC,gCAMmBH,EAASI,QAN5B,kFASeC,QAAQC,MAAR,OATf,0DAxCkB,wBAqDlB,OACI,iBAAKC,UAAU,aAAf,WACMjB,EAAOkB,UACL,4BACI,kBAAMC,SA1CD,SAAAC,GACjBA,EAAMC,iBACsB,KAAxBhB,EAAaiB,QAjBH,2CAuBVC,CAAYlB,GACXmB,MAAK,SAACd,GAGHN,EAAUM,EAASe,SACnBjB,GAAQ,GACHE,EAASgB,aACVC,IAAAA,OAAAA,QAAwB,wDAG/BC,OAAM,SAACZ,GACJD,QAAQc,IAAIb,MAGpBV,EAAgB,KAnBZqB,IAAAA,OAAAA,QAAwB,qCAuChB,WACI,kBACIV,UAAU,aACVa,MAAOzB,EACP0B,KAAK,OACLC,KAAK,SACLC,SAtDH,SAAAb,GACjB,IAAMU,EAAQV,EAAMc,OAAOJ,MAC3BxB,EAAgBwB,OAsDA,mBAAQb,UAAU,SAASc,KAAK,SAAhC,wBAIJ,yBACgB,IAAXxB,GACDJ,EAAOgC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACP,yBACI,SAAC,KAAD,CAAMpB,UAAU,eAChBqB,GAAE,0CAAqCF,GADvC,SAGCC,KAJID,WAWxBpC,EAAOkB,UACJ,4BACI,oBAAQD,UAAU,SAASsB,QAAS,WAAQzC,GAAU,IAAtD,WAA4D,SAAC,MAAD,IAA5D,iBACA,SAAC,KAAD","sources":["components/MoviesPage/MoviesPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { Outlet, useNavigate, useParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { Link } from 'react-router-dom';\nimport {ImArrowLeft } from \"react-icons/im\";\nimport './MoviesPage.modules.css';\nimport PropTypes from 'prop-types';\n\n\nconst KEY = '80bf373e681ab9ab4bf0d2d924176b29';\n\nfunction MoviesPage() {\n    let navigate = useNavigate();\n    let params = useParams();\n\n    const [movies, setMovies] = useState([]);\n    const [searchMovies, setSearchMovies] = useState('');\n    const [isDone, setDone] = useState(false);\n\n    \n    const handleChange = event => {\n        const value = event.target.value;\n        setSearchMovies(value); \n        //console.log(`handleChange ${searchMovies}`);\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        if (searchMovies.trim() === '') {\n            Notiflix.Notify.warning('Please enter a topic to search !');\n            //setMovies([]);\n            return;\n        }\n        else {\n            fetchMovies(searchMovies)\n            .then((response) => {\n                //console.log(response);\n                //console.log(response.total_pages);\n                setMovies(response.results);\n                setDone(true);\n                if (!response.total_pages) {\n                    Notiflix.Notify.warning('No movies found! Please enter a topic to search !');\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        }\n        setSearchMovies('');\n    }\n\n    async function fetchMovies(searchMovies) {\n        try {\n            const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${searchMovies}`);\n            if (!response.ok) {\n                throw new Error(response.status);\n            } else {\n                return response.json();\n            }\n        } catch (error) {\n            return console.error(error);\n        }\n    }\n\n    return (\n        <div className=\"moviesPage\">\n            {!params.movieId &&\n                <div>\n                    <form onSubmit={handleSubmit}>\n                        <input\n                            className=\"movieInput\"\n                            value={searchMovies}\n                            type=\"text\"\n                            name=\"search\"\n                            onChange={handleChange}\n                        />\n                        <button className='button' type=\"submit\">\n                            Search\n                        </button>\n                    </form>\n                    <ul>\n                        {isDone === true && (\n                        movies.map(({ id, original_title }) => (\n                            <li key={id}>\n                                <Link className=\"trendingLink\"\n                                to={`/goit-react-hw-05-movies/movies/${id}`}\n                                >\n                                {original_title}\n                                </Link> \n                            </li>\n                        ))\n                        )}\n                    </ul>\n                </div>}\n            {params.movieId &&\n                <div>\n                    <button className=\"button\" onClick={() => { navigate(-1) }}><ImArrowLeft/>  Go back </button>\n                    <Outlet />\n                </div>\n            }\n        </div>\n    );\n}\n\nMoviesPage.propTypes = {\n    movies: PropTypes.array,\n    searhMovies: PropTypes.string,\n    isDone: PropTypes.bool,\n};\n\nexport default MoviesPage;\n    \n    "],"names":["KEY","navigate","useNavigate","params","useParams","useState","movies","setMovies","searchMovies","setSearchMovies","isDone","setDone","fetch","response","ok","Error","status","json","console","error","className","movieId","onSubmit","event","preventDefault","trim","fetchMovies","then","results","total_pages","Notiflix","catch","log","value","type","name","onChange","target","map","id","original_title","to","onClick"],"sourceRoot":""}