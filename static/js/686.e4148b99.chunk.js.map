{"version":3,"file":"static/js/686.e4148b99.chunk.js","mappings":"+PAKMA,EAAM,mCAoGZ,MAlGA,WACI,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAFwB,wCAMxB,WAA4BC,GAA5B,gGAE+BC,MAAM,sCAAD,OAAuCD,EAAvC,oBAAqDN,IAFzF,WAEcQ,EAFd,QAGsBC,GAHtB,sBAIkB,IAAIC,MAAMF,EAASG,QAJrC,gCAOmBH,EAASI,QAP5B,kFAUeC,QAAQC,MAAR,OAVf,2DANwB,uBAoBxBC,EAAAA,EAAAA,YAAU,YApBc,4CAqBpBC,CAAaf,GACZgB,MAAK,SAACT,GAEHH,EAASG,MAEZU,OAAM,SAACJ,GACJD,QAAQC,MAAMA,QAEnB,CAACb,IAEJ,IACIkB,EAMAf,EANAe,eACAC,EAKAhB,EALAgB,YACAC,EAIAjB,EAJAiB,aACAC,EAGAlB,EAHAkB,SACAC,EAEAnB,EAFAmB,OACAC,EACApB,EADAoB,aAGJ,OACI,4BACA,iBAAKC,UAAU,YAAf,WACI,0BACQ,gBAAKA,UAAU,WACXC,IAAG,wCAAmCN,GACtCO,IAAI,cAGhB,4BACI,0BACKR,EADL,KACuBK,EAAeA,EAAaI,MAAM,EAAG,GAAK,GADjE,QAGA,wCAA+B,GAAfP,EAAhB,QACA,sCACI,uBAAIC,KACR,oCACI,cAAGG,UAAU,cAAb,cACiBI,IAAXN,EACEA,EAAOO,KAAI,gBAAExB,EAAF,EAAEA,GAAIyB,EAAN,EAAMA,KAAN,OACP,eAAaN,UAAU,aAAvB,SACKM,GADIzB,MAGR,2BAM3B,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CACI0B,GAAE,0CAAqC/B,EAArC,SADN,qBAKF,yBACE,SAAC,KAAD,CACI+B,GAAE,0CAAqC/B,EAArC,YADN,8BAOJ,mBACI,SAAC,KAAD","sources":["components/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["import { Link, Outlet, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport './MovieDetailsPage.modules.css';\nimport PropTypes from 'prop-types';\n\nconst KEY = '80bf373e681ab9ab4bf0d2d924176b29';\n\nfunction MovieDetailsPage() {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState([]);\n\n    //console.log(movieId);\n\n    async function fetchMovieId(id) {\n        try {\n            const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`);\n            if (!response.ok) {\n                throw new Error(response.status);\n            } else {\n                //console.log(response.json);\n                return response.json();\n            }\n        } catch (error) {\n            return console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchMovieId(movieId)\n        .then((response) => {\n            //console.log(response);\n            setMovie(response);\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    }, [movieId]);\n\n    const {\n        original_title,\n        poster_path,\n        vote_average,\n        overview,\n        genres,\n        release_date,\n    } = movie;\n\n    return (\n        <div>\n        <div className=\"movieMain\">\n            <div >\n                    <img className=\"movieImg\"\n                        src={`http://image.tmdb.org/t/p/w500${poster_path}`}\n                        alt=\"poster\"\n                    />\n            </div>\n            <div >\n                <h1>\n                    {original_title} ({release_date ? release_date.slice(0, 4) : \"\"})\n                </h1>\n                <p>User Score: {vote_average * 10}%</p>\n                <h2>Overview</h2>\n                    <p>{overview}</p>\n                <h2>Genres</h2>\n                    <p className=\"movieGenres\">\n                        { genres !== undefined ?\n                            genres.map(({id, name}) => (\n                                <li key={id} className=\"movieGenre\"> \n                                    {name}\n                                </li>\n                            )) : 'No movie genre.'}\n                    </p>\n                    \n\n            </div>\n      </div>\n      <hr></hr>\n      <div >\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link\n                to={`/goit-react-hw-05-movies/movies/${movieId}/cast`} >\n                Cast              \n            </Link>\n          </li>\n          <li>\n            <Link\n                to={`/goit-react-hw-05-movies/movies/${movieId}/reviews`}>\n                Reviews              \n            </Link>\n          </li>\n        </ul>\n      </div> \n        <hr></hr>  \n            <Outlet />\n        </div>\n    )\n}\n\nMovieDetailsPage.propTypes = {\n    movieId: PropTypes.number,\n    movie: PropTypes.array,\n};\n\nexport default MovieDetailsPage;"],"names":["KEY","movieId","useParams","useState","movie","setMovie","id","fetch","response","ok","Error","status","json","console","error","useEffect","fetchMovieId","then","catch","original_title","poster_path","vote_average","overview","genres","release_date","className","src","alt","slice","undefined","map","name","to"],"sourceRoot":""}